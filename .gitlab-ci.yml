# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
image: docker:20.10.8

default:
  before_script:
    - cd unit-testing-using-dotnet-test

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-dotnet:       # This job runs in the build stage, which runs first.
  image: mcr.microsoft.com/dotnet/sdk:7.0-alpine
  stage: build
  script:
    - dotnet restore
    - dotnet publish -c release -o /app --no-restore

build-docker:
  services:
    - name: docker:20.10.8-dind
      alias: docker
      command: [ "--tls=false" ]
    - name: docker/compose:1.23.2
      entrypoint: [""]
  stage: build
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker info
    - docker compose build

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - dotnet test

deploy-job:
  stage: deploy
  environment: production
  services:
    - name: docker:20.10.8-dind
      alias: docker
      command: [ "--tls=false" ]
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker tag dotnet-app-image Kafune/unit-testing-using-dotnet-test-app:devops-wk-3
    - docker push dotnet-app-image Kafune/unit-testing-using-dotnet-test-app:devops-wk-3
    - docker tag postgres-db-image Kafune/unit-testing-using-dotnet-test-postgres:devops-wk-3
    - docker push postgres-db-image Kafune/unit-testing-using-dotnet-test-postgres:devops-wk-3



